[[/*
This template contains the core components for the Operator deployment.
Expressions evaluating Helm Values use "{{" and "}}"
Expressions evaluating SKv2 Config use [[ "[[" ]] and [[ "]]" ]]
*/]]
[[- range $operator := $.Operators -]]
---

[[/* Support DaemonSet */]]
  [[- $workloadKind := "Deployment" ]]
  [[- if $operator.Deployment.UseDaemonSet ]]
  [[- $workloadKind = "DaemonSet" ]]
  [[- end -]]
[[- $operatorVar := (lower_camel $operator.Name) -]]
[[- $extraPodLabels := $operator.Deployment.ExtraPodLabels -]]
[[- $extraPodAnnotations := $operator.Deployment.ExtraPodAnnotations -]]
[[- $extraDeploymentLabels := $operator.Deployment.ExtraDeploymentLabels -]]
[[- $extraDeploymentAnnotations := $operator.Deployment.ExtraDeploymentAnnotations -]]

# [[ $workloadKind ]] manifest for [[ $operator.Name ]]
{{- $[[ $operatorVar ]] := $.Values.[[ $operatorVar ]]}}
{{- $[[ $operatorVar ]]Image := $[[ $operatorVar ]].image }}

apiVersion: apps/v1
kind: [[ $workloadKind ]]
metadata:
  labels:
    app: [[ $operator.Name ]]
    [[- range $key, $value := $extraDeploymentLabels ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
[[- if $extraDeploymentAnnotations ]]
  annotations:
    [[- range $key, $value := $extraDeploymentAnnotations ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
[[- end ]]
  name: [[ $operator.Name ]]
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: [[ $operator.Name ]]
  template:
    metadata:
      labels:
        app: [[ $operator.Name ]]
        [[- range $key, $value := $extraPodLabels ]]
        [[ $key ]]: [[ $value ]]
        [[- end ]]
      annotations:
        [[- range $key, $value := $extraPodAnnotations ]]
        [[ $key ]]: [[ $value ]]
        [[- end ]]
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: [[ $operator.Name ]]
[[- if $operator.Volumes ]]
      volumes:
[[ toYaml $operator.Volumes | indent 6 ]]
[[- end ]]
      containers:
      - image: {{ $[[ $operatorVar ]]Image.registry }}/{{ $[[ $operatorVar ]]Image.repository }}:{{ $[[ $operatorVar ]]Image.tag }}
[[- if $operator.Args ]]
        args:
[[ toYaml $operator.Args | indent 8 ]]
[[- end ]]
{{- if $[[ $operatorVar ]].env }}
        env:
{{ toYaml $[[ $operatorVar ]].env | indent 10 }}
{{- end }}
[[- if $operator.VolumeMounts ]]
        volumeMounts:
[[ toYaml $operator.VolumeMounts | indent 8 ]]
[[- end ]]
        imagePullPolicy: {{ $[[ $operatorVar ]]Image.pullPolicy }}
        name: [[ $operator.Name ]]
{{- if $[[ $operatorVar ]].resources }}
        resources:
{{ toYaml $[[ $operatorVar ]].resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if $[[ $operatorVar ]]Image.pullSecret }}
      imagePullSecrets:
        - name: {{ $[[ $operatorVar ]]Image.pullSecret }}
      {{- end}}


---

# Service account for [[ $operator.Name ]]

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: [[ $operator.Name ]]
  name: [[ $operator.Name ]]
  namespace: {{ $.Release.Namespace }}


[[ if gt (len $operator.Service.Ports) 0 ]]
---
# Service for [[ $operator.Name ]]
[[- $extraServiceLabels := $operator.Service.ExtraLabels -]]
[[- $extraServiceAnnotations := $operator.Service.ExtraAnnotations ]]

apiVersion: v1
kind: Service
metadata:
  labels:
    app: [[ $operator.Name ]]
    [[- range $key, $value := $extraServiceLabels ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
[[- if $extraServiceAnnotations ]]
  annotations:
    [[- range $key, $value := $extraServiceAnnotations ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
[[- end ]]
  name: [[ $operator.Name ]]
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: [[ $operator.Name ]]
  type: {{ $[[ $operatorVar ]].serviceType }}
  ports:
  [[- range $port := $operator.Service.Ports ]]
  - name: [[ $port.Name ]]
    port: {{ $[[ $operatorVar ]].ports.[[ $port.Name ]] }}
  [[- end ]]
[[ end ]]

[[ end ]]
