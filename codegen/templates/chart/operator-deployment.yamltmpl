[[/*
This template contains the core components for the Operator deployment.
Expressions evaluating Helm Values use "{{" and "}}"
Expressions evaluating SKv2 Config use "[[" and "]]"
*/]]
[[- range $operator := $.Operators -]]
[[- $operatorVar := (lower_camel $operator.Name) -]]

[[/* custom values defined in codegen model */]]
[[- $args := $operator.Deployment.Args -]]
[[- $volumes := $operator.Deployment.Volumes -]]
[[- $volumeMounts := $operator.Deployment.VolumeMounts -]]
[[- $sidecars := $operator.Deployment.Sidecars -]]
[[- $customPodLabels := $operator.Deployment.CustomPodLabels -]]
[[- $customPodAnnotations := $operator.Deployment.CustomPodAnnotations -]]
[[- $customDeploymentLabels := $operator.Deployment.CustomDeploymentLabels -]]
[[- $customDeploymentAnnotations := $operator.Deployment.CustomDeploymentAnnotations -]]
[[- $customServiceLabels := $operator.Service.CustomLabels -]]
[[- $customServiceAnnotations := $operator.Service.CustomAnnotations ]]

{{- $[[ $operatorVar ]] := $.Values.[[ $operatorVar ]]}}
---

{{- define "[[ $operator.Name ]].deploymentSpec"}}

{{/* Define variables in function scope */}}
{{- $[[ $operatorVar ]] := $.Values.[[ $operatorVar ]]}}
{{- $[[ $operatorVar ]]Image := $[[ $operatorVar ]].image }}
{{- $[[ $operatorVar ]]ExtraPodLabels := $[[ $operatorVar ]].extraPodLabels }}
{{- $[[ $operatorVar ]]ExtraPodAnnotations := $[[ $operatorVar ]].extraPodAnnotations }}
{{- $[[ $operatorVar ]]ExtraDeploymentLabels := $[[ $operatorVar ]].extraDeploymentLabels }}
{{- $[[ $operatorVar ]]ExtraDeploymentAnnotations := $[[ $operatorVar ]].extraDeploymentAnnotations }}

  [[- $workloadKind := "Deployment" ]]
  [[- if $operator.Deployment.UseDaemonSet ]]
  [[- $workloadKind = "DaemonSet" ]]
  [[- end ]]

# [[ $workloadKind ]] manifest for [[ $operator.Name ]]

apiVersion: apps/v1
kind: [[ $workloadKind ]]
metadata:
  labels:
    app: [[ $operator.Name ]]
    [[- range $key, $value := $customDeploymentLabels ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
    {{- range $key, $value := $[[ $operatorVar ]]ExtraDeploymentLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: [[ $operator.Name ]]
    [[- range $key, $value := $customDeploymentAnnotations ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
    {{- range $key, $value := $[[ $operatorVar ]]ExtraDeploymentAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: [[ $operator.Name ]]
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: [[ $operator.Name ]]
      [[- range $key, $value := $customPodLabels ]]
      [[ $key ]]: [[ $value ]]
      [[- end ]]
      {{- range $key, $value := $[[ $operatorVar ]]ExtraPodLabels }}
      {{ $key }}: {{ $value }}
      {{- end }}
  template:
    metadata:
      labels:
        app: [[ $operator.Name ]]
        [[- range $key, $value := $customPodLabels ]]
        [[ $key ]]: [[ $value ]]
        [[- end ]]
        {{- range $key, $value := $[[ $operatorVar ]]ExtraPodLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      annotations:
        app.kubernetes.io/name: [[ $operator.Name ]]
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        [[- range $key, $value := $customPodAnnotations ]]
        [[ $key ]]: [[ $value ]]
        [[- end ]]
        {{- range $key, $value := $[[ $operatorVar ]]ExtraPodAnnotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      serviceAccountName: [[ $operator.Name ]]
[[- if $volumes ]]
      volumes:
[[ toYaml $volumes | indent 6 ]]
[[- end ]]
      containers:
      - image: {{ $[[ $operatorVar ]]Image.registry }}/{{ $[[ $operatorVar ]]Image.repository }}:{{ $[[ $operatorVar ]]Image.tag }}
[[- if $args ]]
        args:
[[ toYaml $args | indent 8 ]]
[[- end ]]
{{- if $[[ $operatorVar ]].env }}
        env:
{{ toYaml $[[ $operatorVar ]].env | indent 10 }}
{{- end }}
[[- if $volumeMounts ]]
        volumeMounts:
[[ toYaml $volumeMounts | indent 8 ]]
[[- end ]]
        imagePullPolicy: {{ $[[ $operatorVar ]]Image.pullPolicy }}
        name: [[ $operator.Name ]]
{{- if $[[ $operatorVar ]].resources }}
        resources:
{{ toYaml $[[ $operatorVar ]].resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
[[- range $sidecar := $sidecars ]]
        [[- $sidecarVar := (printf "%s.sidecars.%s" $operatorVar $sidecar.Name) ]]
{{- $[[ $sidecar.Name ]]Image := $[[ $operatorVar ]].sidecars.[[ $sidecar.Name ]].image }}
      - image: {{ $[[ $sidecar.Name ]]Image.registry }}/{{ $[[ $sidecar.Name ]]Image.repository }}:{{ $[[ $sidecar.Name ]]Image.tag }}
[[- if $sidecar.Args ]]
        args:
[[ toYaml $sidecar.Args | indent 8 ]]
[[- end ]]
{{- if $[[ $sidecarVar ]].env }}
        env:
{{ toYaml $[[ $sidecarVar ]].env | indent 10 }}
{{- end }}
[[- if $sidecar.VolumeMounts ]]
        volumeMounts:
[[ toYaml $sidecar.VolumeMounts | indent 8 ]]
[[- end ]]
        imagePullPolicy: {{ $[[ $sidecar.Name ]]Image.pullPolicy }}
        name: [[ $sidecar.Name ]]
{{- if $[[ $sidecarVar ]].resources }}
        resources:
{{ toYaml $[[ $sidecarVar ]].resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
[[- end ]]
      {{- if $[[ $operatorVar ]]Image.pullSecret }}
      imagePullSecrets:
        - name: {{ $[[ $operatorVar ]]Image.pullSecret }}
      {{- end}}

{{- end }} {{/* define "[[ $operator.Name ]].deploymentSpec" */}}

{{/* Render [[ $operator.Name ]] deployment template with overrides from values*/}}
{{- $[[ $operatorVar ]]DeploymentOverrides := dict }}
{{- if $[[ $operatorVar ]].deploymentOverrides }}
{{- $[[ $operatorVar ]]DeploymentOverrides = $[[ $operatorVar ]].deploymentOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $[[ $operatorVar ]]DeploymentOverrides "[[ $operator.Name ]].deploymentSpec") }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: [[ $operator.Name ]]
  name: [[ $operator.Name ]]
  namespace: {{ $.Release.Namespace }}


{{- define "[[ $operator.Name ]].serviceSpec"}}

[[ if gt (len $operator.Service.Ports) 0 ]]
# Service for [[ $operator.Name ]]
---
# Service for [[ $operator.Name ]]
{{/* Define variables in function scope */}}
{{- $[[ $operatorVar ]] := $.Values.[[ $operatorVar ]]}}
{{- $[[ $operatorVar ]]ExtraServiceLabels := $[[ $operatorVar ]].extraServiceLabels }}
{{- $[[ $operatorVar ]]ExtraServiceAnnotations := $[[ $operatorVar ]].extraServiceAnnotations }}

apiVersion: v1
kind: Service
metadata:
  labels:
    app: [[ $operator.Name ]]
    [[- range $key, $value := $customServiceLabels ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
    {{- range $key, $value := $[[ $operatorVar ]]ExtraServiceLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: [[ $operator.Name ]]
    [[- range $key, $value := $customServiceAnnotations ]]
    [[ $key ]]: [[ $value ]]
    [[- end ]]
    {{- range $key, $value := $[[ $operatorVar ]]ExtraServiceAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: [[ $operator.Name ]]
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: [[ $operator.Name ]]
  type: {{ $[[ $operatorVar ]].serviceType }}
  ports:
  [[- range $port := $operator.Service.Ports ]]
  - name: [[ $port.Name ]]
    port: {{ $[[ $operatorVar ]].ports.[[ $port.Name ]] }}
  [[- end ]]
[[ end ]]

{{- end }} {{/* define "[[ $operator.Name ]].serviceSpec" */}}

{{/* Render [[ $operator.Name ]] service template with overrides from values*/}}
{{- $[[ $operatorVar ]]ServiceOverrides := dict }}
{{- if $[[ $operatorVar ]].serviceOverrides }}
{{- $[[ $operatorVar ]]ServiceOverrides = $[[ $operatorVar ]].serviceOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $[[ $operatorVar ]]ServiceOverrides "[[ $operator.Name ]].serviceSpec") }}

[[ end ]]
