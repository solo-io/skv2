// This file contains generated Deepcopy methods for {{ .Group }}/{{ .Version }} resources

package {{ .Version }}

import (
    runtime "k8s.io/apimachinery/pkg/runtime"
)

{{- range $resource := $.Resources }}

// Generated Deepcopy methods for {{ $resource.Kind }}

func (in *{{ $resource.Kind }}) DeepCopyInto(out *{{ $resource.Kind }}) {
    *out = *in
    out.TypeMeta = in.TypeMeta
    in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)

    // deepcopy spec
    {{- if $.RenderFieldJsonDeepcopy }}
    b, _ := json.Marshal(in.Spec)
    _ = json.Unmarshal(b, &out.Spec)
    {{- else }}
    in.Spec.DeepCopyInto(&out.Spec)
    {{- end }}

    {{- if $resource.Status }}
    // deepcopy status
    {{- if $.RenderFieldJsonDeepcopy }}
    b, _ = json.Marshal(in.Status)
    _ = json.Unmarshal(b, &out.Status)
    {{- else }}
    in.Status.DeepCopyInto(&out.Status)
    {{- end }}
    {{- end }}

    return
}

func (in *{{ $resource.Kind }}) DeepCopy() *{{ $resource.Kind }} {
    if in == nil {
        return nil
    }
    out := new({{ $resource.Kind }})
    in.DeepCopyInto(out)
    return out
}

func (in *{{ $resource.Kind }}) DeepCopyObject() runtime.Object {
    if c := in.DeepCopy(); c != nil {
        return c
    }
    return nil
}

func (in *{{ $resource.Kind }}List) DeepCopyInto(out *{{ $resource.Kind }}List) {
    *out = *in
    out.TypeMeta = in.TypeMeta
    in.ListMeta.DeepCopyInto(&out.ListMeta)
    if in.Items != nil {
        in, out := &in.Items, &out.Items
        *out = make([]{{ $resource.Kind }}, len(*in))
        for i := range *in {
            (*in)[i].DeepCopyInto(&(*out)[i])
        }
    }
    return
}

func (in *{{ $resource.Kind }}List) DeepCopy() *{{ $resource.Kind }}List {
    if in == nil {
        return nil
    }
    out := new({{ $resource.Kind }}List)
    in.DeepCopyInto(out)
    return out
}

func (in *{{ $resource.Kind }}List) DeepCopyObject() runtime.Object {
    if c := in.DeepCopy(); c != nil {
        return c
    }
    return nil
}


{{- end }}

