# Code generated by skv2. DO NOT EDIT.



{{- $server := $.Values.server }}
---

{{- define "server.deploymentSpec" }}
# Deployment manifest for server

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: server
  annotations:
    app.kubernetes.io/name: server
  name: server
  namespace: {{ default .Release.Namespace $.Values.server.namespace }}
spec:
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
      annotations:
        app.kubernetes.io/name: server
    spec:
      serviceAccountName: server
      {{- /* Override the default podSecurityContext config if it is set. */}}
{{- if or ($.Values.server.podSecurityContext) (eq "map[]" (printf "%v" $.Values.server.podSecurityContext)) }}
      securityContext:
{{ toYaml $.Values.server.podSecurityContext | indent 8 }}
{{- end }}
      containers:
{{- $server := $.Values.server }}
{{- $serverImage := $server.image }}
      - name: server
        image: {{ $serverImage.registry }}/{{ $serverImage.repository }}:{{ $serverImage.tag }}
        imagePullPolicy: {{ $serverImage.pullPolicy }}
        env:
  {{- if $.Values.server.secret.enabled }}
          - name: ENV_VAR
            value: templated
  {{- end }}        
  {{- toYaml $server.env | nindent 10 -}}
  {{- range $name, $item := $server.extraEnvs }}
          - name: {{ $name }}
  {{- $item | toYaml | nindent 12 }}
  {{- end }}
        resources:
{{- if $server.resources }}
{{ toYaml $server.resources | indent 10}}
{{- else}}
          requests:
            cpu: 500m
            memory: 256Mi
{{- end }}
        {{- /*
          Render securityContext configs if it is set.
          If securityContext is not set, render the default securityContext.
          If securityContext is set to 'false', render an empty map.
        */}}
        securityContext:
{{- if or ($server.securityContext) (eq "map[]" (printf "%v" $server.securityContext)) }}
{{ toYaml $server.securityContext | indent 10}}
{{/* Because securityContext is nil by default we can only perform following conversion if it is a boolean. Skip conditional otherwise. */}}
{{- else if eq (ternary $server.securityContext true (eq "bool" (printf "%T" $server.securityContext))) false }}
          {}
{{- else}}
          runAsNonRoot: true
          {{- if not $server.floatingUserId }}
          runAsUser: {{ printf "%.0f" (float64 $server.runAsUser) }}
          {{- end }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- end }}
      {{- if $serverImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $serverImage.pullSecret }}
      {{- end}}
{{- end }} {{/* define "server.deploymentSpec" */}}

{{/* Render server deployment template with overrides from values*/}}
{{ if $server.enabled }}
{{- $serverDeploymentOverrides := dict }}
{{- if $server.deploymentOverrides }}
{{- $serverDeploymentOverrides = $server.deploymentOverrides  }}
{{- end }}
---
{{ include "skv2.utils.merge" (list . $serverDeploymentOverrides "server.deploymentSpec") }}
{{- end }}
---
{{ if $server.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: server
  {{- if $server.serviceAccount}}
  {{- if $server.serviceAccount.extraAnnotations }}
  annotations:
    {{- range $key, $value := $server.serviceAccount.extraAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  {{- end }}
  {{- end}}
  name: server
  namespace: {{ default .Release.Namespace $.Values.server.namespace }}
{{- end }}


{{- define "server.serviceSpec"}}

{{- end }} {{/* define "server.serviceSpec" */}}
{{ if $server.enabled }}
{{/* Render server service template with overrides from values*/}}
{{- $serverServiceOverrides := dict }}
{{- if $server.serviceOverrides }}
{{- $serverServiceOverrides = $server.serviceOverrides  }}
{{- end }}

---

{{ include "skv2.utils.merge" (list . $serverServiceOverrides "server.serviceSpec") }}
{{- end }}

