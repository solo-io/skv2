# Code generated by skv2. DO NOT EDIT.



{{- $painter := $.Values.painter}}
---

{{- define "painter.deploymentSpec"}}

{{/* Define variables in function scope */}}
{{- $painter := $.Values.painter}}
{{- $painterImage := $painter.image }}

# Deployment manifest for painter

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: painter
    deployment: labels
  annotations:
    app.kubernetes.io/name: painter
    deployment: annotation
  name: painter
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: painter
      pod: labels
  template:
    metadata:
      labels:
        app: painter
        pod: labels
      annotations:
        app.kubernetes.io/name: painter
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        pod: annotations
    spec:
      serviceAccountName: painter
      volumes:
      - emptyDir: {}
        name: paint
      containers:
      - image: {{ $painterImage.registry }}/{{ $painterImage.repository }}:{{ $painterImage.tag }}
        args:
        - foo
{{- if $painter.env }}
        env:
{{ toYaml $painter.env | indent 10 }}
{{- end }}
        imagePullPolicy: {{ $painterImage.pullPolicy }}
        name: painter
{{- if $painter.resources }}
        resources:
{{ toYaml $painter.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- $paletteImage := $painter.sidecars.palette.image }}
      - image: {{ $paletteImage.registry }}/{{ $paletteImage.repository }}:{{ $paletteImage.tag }}
        args:
        - bar
        - baz
{{- if $painter.sidecars.palette.env }}
        env:
{{ toYaml $painter.sidecars.palette.env | indent 10 }}
{{- end }}
        volumeMounts:
        - mountPath: /etc/paint
          name: paint
        imagePullPolicy: {{ $paletteImage.pullPolicy }}
        name: palette
{{- if $painter.sidecars.palette.resources }}
        resources:
{{ toYaml $painter.sidecars.palette.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
      {{- if $painterImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $painterImage.pullSecret }}
      {{- end}}

{{- end }} {{/* define "painter.deploymentSpec" */}}

{{/* Render painter deployment template with overrides from values*/}}
{{- $painterDeploymentOverrides := dict }}
{{- if $painter.deploymentOverrides }}
{{- $painterDeploymentOverrides = $painter.deploymentOverrides  }}
{{- end }}
---
{{ include "skv2.utils.merge" (list . $painterDeploymentOverrides "painter.deploymentSpec") }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: painter
  name: painter
  namespace: {{ $.Release.Namespace }}


{{- define "painter.serviceSpec"}}


{{- end }} {{/* define "painter.serviceSpec" */}}

{{/* Render painter service template with overrides from values*/}}
{{- $painterServiceOverrides := dict }}
{{- if $painter.serviceOverrides }}
{{- $painterServiceOverrides = $painter.serviceOverrides  }}
{{- end }}
---
{{ include "skv2.utils.merge" (list . $painterServiceOverrides "painter.serviceSpec") }}


