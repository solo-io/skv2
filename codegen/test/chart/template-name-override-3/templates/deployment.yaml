# Code generated by skv2. DO NOT EDIT.



{{- $glooMeshRedis := $.Values.redis.deployment }}
---

{{- define "gloo-mesh-redis.deploymentSpec" }}
# Deployment manifest for gloo-mesh-redis

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-mesh-redis
  annotations:
    app.kubernetes.io/name: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: {{ default .Release.Namespace $.Values.redis.deployment.namespace }}
spec:
  selector:
    matchLabels:
      app: gloo-mesh-redis
  template:
    metadata:
      labels:
        app: gloo-mesh-redis
      annotations:
        app.kubernetes.io/name: gloo-mesh-redis
    spec:
      serviceAccountName: gloo-mesh-redis
      {{- /* Override the default podSecurityContext config if it is set. */}}
{{- if or ($.Values.redis.deployment.podSecurityContext) (eq "map[]" (printf "%v" $.Values.redis.deployment.podSecurityContext)) }}
      securityContext:
{{ toYaml $.Values.redis.deployment.podSecurityContext | indent 8 }}
{{- end }}
      containers:
{{- $glooMeshRedis := $.Values.redis.deployment }}
{{- $glooMeshRedisImage := $glooMeshRedis.image }}
      - name: gloo-mesh-redis
        image: {{ $glooMeshRedisImage.registry }}/{{ $glooMeshRedisImage.repository }}:{{ $glooMeshRedisImage.tag }}
        imagePullPolicy: {{ $glooMeshRedisImage.pullPolicy }}
{{- if $glooMeshRedis.env }}
        env:
{{ toYaml $glooMeshRedis.env | indent 10 }}
{{- else if $glooMeshRedis.extraEnvs }}
        env:
{{- end }}
{{- range $name, $item := $glooMeshRedis.extraEnvs }}
          - name: {{ $name }}
{{- $item | toYaml | nindent 12 }}
{{- end }}
        resources:
{{- if $glooMeshRedis.resources }}
{{ toYaml $glooMeshRedis.resources | indent 10}}
{{- else}}
          requests:
            cpu: 500m
            memory: 256Mi
{{- end }}
        {{- /*
          Render securityContext configs if it is set.
          If securityContext is not set, render the default securityContext.
          If securityContext is set to 'false', render an empty map.
        */}}
        securityContext:
{{- if or ($glooMeshRedis.securityContext) (eq "map[]" (printf "%v" $glooMeshRedis.securityContext)) }}
{{ toYaml $glooMeshRedis.securityContext | indent 10}}
{{/* Because securityContext is nil by default we can only perform following conversion if it is a boolean. Skip conditional otherwise. */}}
{{- else if eq (ternary $glooMeshRedis.securityContext true (eq "bool" (printf "%T" $glooMeshRedis.securityContext))) false }}
          {}
{{- else}}
          runAsNonRoot: true
          {{- if not $glooMeshRedis.floatingUserId }}
          runAsUser: {{ printf "%.0f" (float64 $glooMeshRedis.runAsUser) }}
          {{- end }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- end }}
      {{- if $glooMeshRedisImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $glooMeshRedisImage.pullSecret }}
      {{- end}}
{{- end }} {{/* define "gloo-mesh-redis.deploymentSpec" */}}

{{/* Render gloo-mesh-redis deployment template with overrides from values*/}}
{{ if and ($.Values.redis.enabled) (not $.Values.store.enabled) }}
{{- $glooMeshRedisDeploymentOverrides := dict }}
{{- if $glooMeshRedis.deploymentOverrides }}
{{- $glooMeshRedisDeploymentOverrides = $glooMeshRedis.deploymentOverrides  }}
{{- end }}
---
{{ include "skv2.utils.merge" (list . $glooMeshRedisDeploymentOverrides "gloo-mesh-redis.deploymentSpec") }}
{{- end }}
---
{{ if and ($.Values.redis.enabled) (not $.Values.store.enabled) }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-mesh-redis
  {{- if $glooMeshRedis.serviceAccount}}
  {{- if $glooMeshRedis.serviceAccount.extraAnnotations }}
  annotations:
    {{- range $key, $value := $glooMeshRedis.serviceAccount.extraAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  {{- end }}
  {{- end}}
  name: gloo-mesh-redis
  namespace: {{ default .Release.Namespace $.Values.redis.deployment.namespace }}
{{- end }}


{{- define "gloo-mesh-redis.serviceSpec"}}

# Service for gloo-mesh-redis
{{/* Define variables in function scope */}}
{{- $glooMeshRedis := $.Values.redis.deployment}}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo-mesh-redis
  annotations:
    app.kubernetes.io/name: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: {{ default .Release.Namespace $.Values.redis.deployment.namespace }}
spec:
  selector:
    app: gloo-mesh-redis
  type: {{ $glooMeshRedis.serviceType }}
  ports:
  - name: redis
    port: {{ index $glooMeshRedis "ports" "redis" }}

{{- end }} {{/* define "gloo-mesh-redis.serviceSpec" */}}
{{ if and ($.Values.redis.enabled) (not $.Values.store.enabled) }}
{{/* Render gloo-mesh-redis service template with overrides from values*/}}
{{- $glooMeshRedisServiceOverrides := dict }}
{{- if $glooMeshRedis.serviceOverrides }}
{{- $glooMeshRedisServiceOverrides = $glooMeshRedis.serviceOverrides  }}
{{- end }}

---

{{ include "skv2.utils.merge" (list . $glooMeshRedisServiceOverrides "gloo-mesh-redis.serviceSpec") }}
{{- end }}


{{- $glooMeshRedis := $.Values.store.default.deployment }}
---

{{- define "gloo-mesh-redis-snapshots.deploymentSpec" }}
# Deployment manifest for gloo-mesh-redis

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gloo-mesh-redis
  annotations:
    app.kubernetes.io/name: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: {{ default .Release.Namespace $.Values.store.default.deployment.namespace }}
spec:
  selector:
    matchLabels:
      app: gloo-mesh-redis
  template:
    metadata:
      labels:
        app: gloo-mesh-redis
      annotations:
        app.kubernetes.io/name: gloo-mesh-redis
    spec:
      serviceAccountName: gloo-mesh-redis
      {{- /* Override the default podSecurityContext config if it is set. */}}
{{- if or ($.Values.store.default.deployment.podSecurityContext) (eq "map[]" (printf "%v" $.Values.store.default.deployment.podSecurityContext)) }}
      securityContext:
{{ toYaml $.Values.store.default.deployment.podSecurityContext | indent 8 }}
{{- end }}
      containers:
{{- $glooMeshRedis := $.Values.store.default.deployment }}
{{- $glooMeshRedisImage := $glooMeshRedis.image }}
      - name: gloo-mesh-redis
        image: {{ $glooMeshRedisImage.registry }}/{{ $glooMeshRedisImage.repository }}:{{ $glooMeshRedisImage.tag }}
        imagePullPolicy: {{ $glooMeshRedisImage.pullPolicy }}
{{- if $glooMeshRedis.env }}
        env:
{{ toYaml $glooMeshRedis.env | indent 10 }}
{{- else if $glooMeshRedis.extraEnvs }}
        env:
{{- end }}
{{- range $name, $item := $glooMeshRedis.extraEnvs }}
          - name: {{ $name }}
{{- $item | toYaml | nindent 12 }}
{{- end }}
        resources:
{{- if $glooMeshRedis.resources }}
{{ toYaml $glooMeshRedis.resources | indent 10}}
{{- else}}
          requests:
            cpu: 500m
            memory: 256Mi
{{- end }}
        {{- /*
          Render securityContext configs if it is set.
          If securityContext is not set, render the default securityContext.
          If securityContext is set to 'false', render an empty map.
        */}}
        securityContext:
{{- if or ($glooMeshRedis.securityContext) (eq "map[]" (printf "%v" $glooMeshRedis.securityContext)) }}
{{ toYaml $glooMeshRedis.securityContext | indent 10}}
{{/* Because securityContext is nil by default we can only perform following conversion if it is a boolean. Skip conditional otherwise. */}}
{{- else if eq (ternary $glooMeshRedis.securityContext true (eq "bool" (printf "%T" $glooMeshRedis.securityContext))) false }}
          {}
{{- else}}
          runAsNonRoot: true
          {{- if not $glooMeshRedis.floatingUserId }}
          runAsUser: {{ printf "%.0f" (float64 $glooMeshRedis.runAsUser) }}
          {{- end }}
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- end }}
      {{- if $glooMeshRedisImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $glooMeshRedisImage.pullSecret }}
      {{- end}}
{{- end }} {{/* define "gloo-mesh-redis-snapshots.deploymentSpec" */}}

{{/* Render gloo-mesh-redis-snapshots deployment template with overrides from values*/}}
{{ if and (not $.Values.redis.enabled) ($.Values.store.enabled) }}
{{- $glooMeshRedisDeploymentOverrides := dict }}
{{- if $glooMeshRedis.deploymentOverrides }}
{{- $glooMeshRedisDeploymentOverrides = $glooMeshRedis.deploymentOverrides  }}
{{- end }}
---
{{ include "skv2.utils.merge" (list . $glooMeshRedisDeploymentOverrides "gloo-mesh-redis-snapshots.deploymentSpec") }}
{{- end }}
---
{{ if and (not $.Values.redis.enabled) ($.Values.store.enabled) }}
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gloo-mesh-redis
  {{- if $glooMeshRedis.serviceAccount}}
  {{- if $glooMeshRedis.serviceAccount.extraAnnotations }}
  annotations:
    {{- range $key, $value := $glooMeshRedis.serviceAccount.extraAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  {{- end }}
  {{- end}}
  name: gloo-mesh-redis
  namespace: {{ default .Release.Namespace $.Values.store.default.deployment.namespace }}
{{- end }}


{{- define "gloo-mesh-redis-snapshots.serviceSpec"}}

# Service for gloo-mesh-redis
{{/* Define variables in function scope */}}
{{- $glooMeshRedis := $.Values.store.default.deployment}}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gloo-mesh-redis
  annotations:
    app.kubernetes.io/name: gloo-mesh-redis
  name: gloo-mesh-redis
  namespace: {{ default .Release.Namespace $.Values.store.default.deployment.namespace }}
spec:
  selector:
    app: gloo-mesh-redis
  type: {{ $glooMeshRedis.serviceType }}
  ports:
  - name: redis
    port: {{ index $glooMeshRedis "ports" "redis" }}

{{- end }} {{/* define "gloo-mesh-redis-snapshots.serviceSpec" */}}
{{ if and (not $.Values.redis.enabled) ($.Values.store.enabled) }}
{{/* Render gloo-mesh-redis service template with overrides from values*/}}
{{- $glooMeshRedisServiceOverrides := dict }}
{{- if $glooMeshRedis.serviceOverrides }}
{{- $glooMeshRedisServiceOverrides = $glooMeshRedis.serviceOverrides  }}
{{- end }}

---

{{ include "skv2.utils.merge" (list . $glooMeshRedisServiceOverrides "gloo-mesh-redis.serviceSpec") }}
{{- end }}

