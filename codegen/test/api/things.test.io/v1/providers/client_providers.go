// Code generated by skv2. DO NOT EDIT.

package v1



import (
    things_test_io_v1 "github.com/solo-io/skv2/codegen/test/api/things.test.io/v1"

    "k8s.io/client-go/rest"
    "sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for CueBugClient from Clientset
func CueBugClientFromClientsetProvider(clients things_test_io_v1.Clientset) things_test_io_v1.CueBugClient {
    return clients.CueBugs()
}

// Provider for CueBug Client from Client
func CueBugClientProvider(client client.Client) things_test_io_v1.CueBugClient {
    return things_test_io_v1.NewCueBugClient(client)
}

type CueBugClientFactory func(client client.Client) things_test_io_v1.CueBugClient

func CueBugClientFactoryProvider() CueBugClientFactory {
    return CueBugClientProvider
}

type CueBugClientFromConfigFactory func(cfg *rest.Config) (things_test_io_v1.CueBugClient, error)

func CueBugClientFromConfigFactoryProvider() CueBugClientFromConfigFactory {
    return func(cfg *rest.Config) (things_test_io_v1.CueBugClient, error) {
        clients, err := things_test_io_v1.NewClientsetFromConfig(cfg)
        if err != nil {
            return nil, err
        }
        return clients.CueBugs(), nil
    }
}