// Code generated by skv2. DO NOT EDIT.

package v1

import (
	admissionregistration_k8s_io_v1 "github.com/solo-io/skv2/pkg/multicluster/internal/k8s/admissionregistration.k8s.io/v1"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for ValidatingWebhookConfigurationClient from Clientset
func ValidatingWebhookConfigurationClientFromClientsetProvider(clients admissionregistration_k8s_io_v1.Clientset) admissionregistration_k8s_io_v1.ValidatingWebhookConfigurationClient {
	return clients.ValidatingWebhookConfigurations()
}

// Provider for ValidatingWebhookConfiguration Client from Client
func ValidatingWebhookConfigurationClientProvider(client client.Client) admissionregistration_k8s_io_v1.ValidatingWebhookConfigurationClient {
	return admissionregistration_k8s_io_v1.NewValidatingWebhookConfigurationClient(client)
}

type ValidatingWebhookConfigurationClientFactory func(client client.Client) admissionregistration_k8s_io_v1.ValidatingWebhookConfigurationClient

func ValidatingWebhookConfigurationClientFactoryProvider() ValidatingWebhookConfigurationClientFactory {
	return ValidatingWebhookConfigurationClientProvider
}

type ValidatingWebhookConfigurationClientFromConfigFactory func(cfg *rest.Config) (admissionregistration_k8s_io_v1.ValidatingWebhookConfigurationClient, error)

func ValidatingWebhookConfigurationClientFromConfigFactoryProvider() ValidatingWebhookConfigurationClientFromConfigFactory {
	return func(cfg *rest.Config) (admissionregistration_k8s_io_v1.ValidatingWebhookConfigurationClient, error) {
		clients, err := admissionregistration_k8s_io_v1.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.ValidatingWebhookConfigurations(), nil
	}
}
