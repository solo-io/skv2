// Code generated by skv2. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for CertificateSigningRequestClient from Client
func CertificateSigningRequestClientProvider(client client.Client) CertificateSigningRequestClient {
	return NewCertificateSigningRequestClient(client)
}

type CertificateSigningRequestClientFactory func(client client.Client) CertificateSigningRequestClient

func CertificateSigningRequestClientFactoryProvider() CertificateSigningRequestClientFactory {
	return CertificateSigningRequestClientProvider
}

type CertificateSigningRequestClientFromConfigFactory func(cfg *rest.Config) (CertificateSigningRequestClient, error)

func CertificateSigningRequestClientFromConfigFactoryProvider() CertificateSigningRequestClientFromConfigFactory {
	return func(cfg *rest.Config) (CertificateSigningRequestClient, error) {
		clients, err := NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.CertificateSigningRequests(), nil
	}
}
