// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/skv2/api/multicluster/v1alpha1/cluster.proto

package v1alpha1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	v1 "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Representation of a Kubernetes cluster that has been registered.
type KubernetesClusterSpec struct {
	// name of the secret which contains the kubeconfig with information to connect to the remote cluster.
	SecretName string `protobuf:"bytes,1,opt,name=secret_name,json=secretName,proto3" json:"secret_name,omitempty"`
	// name local DNS suffix used by the cluster.
	// used for building FQDNs for in-cluster services
	// defaults to 'cluster.local'
	ClusterDomain        string   `protobuf:"bytes,2,opt,name=cluster_domain,json=clusterDomain,proto3" json:"cluster_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesClusterSpec) Reset()         { *m = KubernetesClusterSpec{} }
func (m *KubernetesClusterSpec) String() string { return proto.CompactTextString(m) }
func (*KubernetesClusterSpec) ProtoMessage()    {}
func (*KubernetesClusterSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_533baf1d8d7a56a7, []int{0}
}
func (m *KubernetesClusterSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubernetesClusterSpec.Unmarshal(m, b)
}
func (m *KubernetesClusterSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubernetesClusterSpec.Marshal(b, m, deterministic)
}
func (m *KubernetesClusterSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesClusterSpec.Merge(m, src)
}
func (m *KubernetesClusterSpec) XXX_Size() int {
	return xxx_messageInfo_KubernetesClusterSpec.Size(m)
}
func (m *KubernetesClusterSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesClusterSpec.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesClusterSpec proto.InternalMessageInfo

func (m *KubernetesClusterSpec) GetSecretName() string {
	if m != nil {
		return m.SecretName
	}
	return ""
}

func (m *KubernetesClusterSpec) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

type KubernetesClusterStatus struct {
	// List of statuses about the kubernetes cluster.
	// This list allows for multiple applications/pods to record their connection status.
	Status               []*v1.Status `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *KubernetesClusterStatus) Reset()         { *m = KubernetesClusterStatus{} }
func (m *KubernetesClusterStatus) String() string { return proto.CompactTextString(m) }
func (*KubernetesClusterStatus) ProtoMessage()    {}
func (*KubernetesClusterStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_533baf1d8d7a56a7, []int{1}
}
func (m *KubernetesClusterStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubernetesClusterStatus.Unmarshal(m, b)
}
func (m *KubernetesClusterStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubernetesClusterStatus.Marshal(b, m, deterministic)
}
func (m *KubernetesClusterStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesClusterStatus.Merge(m, src)
}
func (m *KubernetesClusterStatus) XXX_Size() int {
	return xxx_messageInfo_KubernetesClusterStatus.Size(m)
}
func (m *KubernetesClusterStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesClusterStatus.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesClusterStatus proto.InternalMessageInfo

func (m *KubernetesClusterStatus) GetStatus() []*v1.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*KubernetesClusterSpec)(nil), "multicluster.solo.io.KubernetesClusterSpec")
	proto.RegisterType((*KubernetesClusterStatus)(nil), "multicluster.solo.io.KubernetesClusterStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/skv2/api/multicluster/v1alpha1/cluster.proto", fileDescriptor_533baf1d8d7a56a7)
}

var fileDescriptor_533baf1d8d7a56a7 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0x89, 0x4a, 0xc1, 0x2d, 0x7a, 0x08, 0x15, 0x63, 0x05, 0x2d, 0x05, 0xa1, 0x17, 0x77,
	0x49, 0x3d, 0x8b, 0xa0, 0x82, 0x07, 0xc5, 0x43, 0xbd, 0x79, 0x09, 0x9b, 0x38, 0xa4, 0x4b, 0x93,
	0x4c, 0xd8, 0x9d, 0x0d, 0x7d, 0x24, 0x1f, 0xc1, 0xe7, 0xf1, 0x1d, 0xbc, 0x4b, 0x76, 0xb7, 0x45,
	0x28, 0x9e, 0x76, 0xf8, 0xf6, 0x63, 0xfe, 0xfc, 0xd8, 0x5d, 0xa9, 0x68, 0x69, 0x73, 0x5e, 0x60,
	0x2d, 0x0c, 0x56, 0x78, 0xad, 0x50, 0x98, 0x55, 0x37, 0x17, 0xb2, 0x55, 0xa2, 0xb6, 0x15, 0xa9,
	0xa2, 0xb2, 0x86, 0x40, 0x8b, 0x2e, 0x95, 0x55, 0xbb, 0x94, 0xa9, 0x08, 0x80, 0xb7, 0x1a, 0x09,
	0xe3, 0xd1, 0x5f, 0x89, 0xf7, 0x2d, 0xb8, 0xc2, 0xf1, 0xa8, 0xc4, 0x12, 0x9d, 0x20, 0xfa, 0xca,
	0xbb, 0xe3, 0x18, 0xd6, 0xe4, 0x21, 0xac, 0x29, 0xb0, 0xf3, 0xed, 0xb4, 0x02, 0x35, 0x88, 0x2e,
	0x75, 0xaf, 0xff, 0x9c, 0x66, 0xec, 0xe4, 0xd9, 0xe6, 0xa0, 0x1b, 0x20, 0x30, 0x0f, 0x7e, 0xc6,
	0x5b, 0x0b, 0x45, 0x7c, 0xc9, 0x86, 0x06, 0x0a, 0x0d, 0x94, 0x35, 0xb2, 0x86, 0x24, 0x9a, 0x44,
	0xb3, 0xc3, 0x05, 0xf3, 0xe8, 0x55, 0xd6, 0x10, 0x5f, 0xb1, 0xe3, 0xb0, 0x53, 0xf6, 0x81, 0xb5,
	0x54, 0x4d, 0xb2, 0xe7, 0x9c, 0xa3, 0x40, 0x1f, 0x1d, 0x9c, 0xbe, 0xb0, 0xd3, 0xdd, 0x01, 0x24,
	0xc9, 0x9a, 0x38, 0x65, 0x03, 0xe3, 0xaa, 0x24, 0x9a, 0xec, 0xcf, 0x86, 0xf3, 0x33, 0xee, 0x16,
	0xeb, 0xd7, 0xdd, 0x9c, 0xc9, 0xbd, 0xba, 0x08, 0xe2, 0xfd, 0xd3, 0xd7, 0xcf, 0x41, 0xf4, 0xf9,
	0x7d, 0x11, 0xbd, 0xdf, 0xfe, 0x17, 0x6b, 0xbb, 0x2a, 0x77, 0xa2, 0xdd, 0xb4, 0xdb, 0x46, 0x9c,
	0x0f, 0xdc, 0xf9, 0x37, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x56, 0x49, 0x9c, 0x73, 0x9e, 0x01,
	0x00, 0x00,
}

func (this *KubernetesClusterSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*KubernetesClusterSpec)
	if !ok {
		that2, ok := that.(KubernetesClusterSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SecretName != that1.SecretName {
		return false
	}
	if this.ClusterDomain != that1.ClusterDomain {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *KubernetesClusterStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*KubernetesClusterStatus)
	if !ok {
		that2, ok := that.(KubernetesClusterStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Status) != len(that1.Status) {
		return false
	}
	for i := range this.Status {
		if !this.Status[i].Equal(that1.Status[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
