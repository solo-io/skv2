syntax = "proto3";

package core.skv2.solo.io;

option go_package = "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

import "extproto/ext.proto";
option (extproto.hash_all) = true;
option (extproto.equal_all) = true;

// Resource reference for an object
message ObjectRef {

    // name of the resource being referenced
    string name = 1;

    // namespace of the resource being referenced
    string namespace = 2;
}

// Resource reference for a cross-cluster-scoped object
message ClusterObjectRef {

    // name of the resource being referenced
    string name = 1;

    // namespace of the resource being referenced
    string namespace = 2;

    // name of the cluster in which the resource exists
    string cluster_name = 3;
}

// Resource reference for a typed object
message TypedObjectRef {

    // API group of the resource being referenced
    google.protobuf.StringValue api_group = 1;

    // Kind of the resource being referenced
    google.protobuf.StringValue kind = 2;

    // name of the resource being referenced
    string name = 3;

    // namespace of the resource being referenced
    string namespace = 4;
}

// Resource reference for a typed, cross-cluster-scoped object
message TypedClusterObjectRef {

    // API group of the resource being referenced
    google.protobuf.StringValue api_group = 1;

    // Kind of the resource being referenced
    google.protobuf.StringValue kind = 2;

    // name of the resource being referenced
    string name = 3;

    // namespace of the resource being referenced
    string namespace = 4;

    // name of the cluster in which the resource exists
    string cluster_name = 5;
}

// A generic status
message Status {

    // The State of a reconciled object
    enum State {
        // Waiting to be processed.
        PENDING = 0;

        // Currently processing.
        PROCESSING = 1;

        // Invalid parameters supplied, will not continue.
        INVALID = 2;

        // Failed during processing.
        FAILED = 3;

        // Finished processing successfully.
        ACCEPTED = 4;
    }

    // The current state of the resource
    State state = 1;

    // A human readable message about the current state of the object
    string message = 2;

    // The most recently observed generation of the resource. This value corresponds to the `metadata.generation` of
    // a kubernetes resource
    int64 observed_generation = 3;

    // The time at which this status was recorded
    google.protobuf.Timestamp processing_time = 4;

    // (optional) The owner of the status, this value can be used to identify the entity which wrote this status.
    // This is useful in situations where a given resource may have multiple owners.
    google.protobuf.StringValue owner = 5;
}
